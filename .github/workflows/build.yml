name: Build and Auto Release

on:
  push:
    branches: [ main, dev ]  # 添加dev分支
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write  # 添加写入内容的权限
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [24.x]  # 从16.x升级到24.x

    steps:
    - uses: actions/checkout@v4  # 从v3升级到v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GH_TOKEN }}  # 使用GITHUB_TOKEN而不是SSH密钥
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4  # 从v3升级到v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Build application
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          yarn build:mac --universal
        else
          yarn build:win
        fi
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用GITHUB_TOKEN而不是GH_TOKEN
    
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: dist-macos-dmg
        path: dist/*universal.dmg
        
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: dist-windows-exe
        path: dist/*.exe