name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  # 创建版本标签
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Create Tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ steps.package-version.outputs.version }}'
            const tagName = `v${version}`
            
            // 检查tag是否已存在
            try {
              await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tagName}`
              })
              console.log(`Tag ${tagName} already exists.`)
            } catch (error) {
              // 创建新tag
              const sha = context.sha
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tagName}`,
                sha: sha
              })
              console.log(`Created tag ${tagName} at ${sha}`)
            }
  
  # 构建和发布应用
  release:
    needs: create-tag
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [24.x]  # 从16.x升级到24.x

    steps:
    - uses: actions/checkout@v4  # 从v3升级到v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4  # 从v3升级到v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Build application
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          yarn build:mac --universal
        else
          yarn build:win
        fi
      shell: bash
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.exe
          dist/*universal.dmg
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # 发布npm包
  publish-package:
    needs: create-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}